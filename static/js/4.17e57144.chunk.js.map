{"version":3,"sources":["pages/MemberList/index.module.scss","members.ts","pages/MemberList/index.tsx"],"names":["module","exports","memberTree","membersTree","name","login","value","children","arrayToTree","membersData","map","_ref","_ref2","Object","slicedToArray","id","nickname","parentId","joinDate","city","company","parentProperty","customID","MemberList","chartRef","useRef","useEffect","myChart","echarts","current","setOption","tooltip","trigger","triggerOn","formatter","series","type","data","top","left","bottom","right","symbol","symbolSize","label","normal","position","verticalAlign","initialTreeDepth","expandAndCollapse","animationDuration","animationDurationUpdate","on","params","console","log","window","open","react","ref","className","classes"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,WAAA,4+PC2BHC,EAzBK,CAClBC,KAAM,eACNC,MAAO,YACPC,MAAO,YACPC,SAAUC,IACRC,EAAYC,IACV,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAEI,EAAFH,EAAA,GAAMP,EAANO,EAAA,GAAaI,EAAbJ,EAAA,GAAuBK,EAAvBL,EAAA,SAA+D,CAC7DG,KACAC,WACAX,QACAY,SAAuB,UAAbA,EAAuB,KAAOA,EACxCC,SALFN,EAAA,GAMEO,KANFP,EAAA,GAOEQ,QAPFR,EAAA,GAQER,KAAMY,EAAW,IAAMD,EAAK,IAC5BT,MAAOD,KAGX,CACEgB,eAAgB,WAChBC,SAAU,QC2DDC,UAzEc,WAC3B,IAAMC,EAAWC,iBAAuB,MAiExC,OAhEAC,oBAAU,WAMR,IAAMC,EAAUC,OAAaJ,EAASK,SAEtCF,EAAQG,UAAU,CAChBC,QAAS,CACPC,QAAS,OACTC,UAAW,YACXC,UAAW,QAEbC,OAAQ,CACN,CACEC,KAAM,OACNhC,KAAM,QACNiC,KAAM,CAAClC,GACPmC,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,MAAO,KAEPC,OAAQ,YACRC,WAAY,EAEZC,MAAO,CACLC,OAAQ,CACNC,SAAU,QACVC,cAAe,WAInBC,kBAAmB,EACnBC,mBAAmB,EAEnBC,kBAAmB,IACnBC,wBAAyB,QAiB/BxB,EAAQyB,GAAG,QAAS,SAACC,GACnBC,QAAQC,IAAIF,GACZG,OAAOC,KACL,8DACEJ,EAAOhB,KAAKhC,UAGjB,IAGDqD,EAAA,cAAAA,EAAA,cACEA,EAAA,qBAAKC,IAAKnC,EAAUoC,UAAWC,IAAQ3D","file":"static/js/4.17e57144.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"memberTree\":\"MemberList_memberTree__2xI6t\"};","import arrayToTree from 'array-to-tree';\nimport membersData from './members.json';\n\nconst membersTree = {\n  name: '成员',\n  login: 'frontend9',\n  value: 'frontend9',\n  children: arrayToTree(\n    membersData.map(\n      ([id, login, nickname, parentId, joinDate, city, company]) => ({\n        id,\n        nickname,\n        login,\n        parentId: parentId === '00000' ? null : parentId,\n        joinDate,\n        city,\n        company,\n        name: nickname + '(' + id + ')',\n        value: login,\n      })\n    ),\n    {\n      parentProperty: 'parentId',\n      customID: 'id',\n    }\n  ),\n};\n\nexport default membersTree;\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport 'echarts/lib/chart/tree';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport * as echarts from 'echarts/lib/echarts';\nimport classes from './index.module.scss';\nimport membersTree from '../../members';\n\nconst MemberList: React.FC = () => {\n  const chartRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    /**\n     * The function passed to useEffect will run after the render is committed to the screen.\n     *\n     * {@link https://reactjs.org/docs/hooks-reference.html#useeffect | Hooks API Reference useEffect }\n     */\n    const myChart = echarts.init(chartRef.current!);\n\n    myChart.setOption({\n      tooltip: {\n        trigger: 'item',\n        triggerOn: 'mousemove',\n        formatter: '{c0}',\n      },\n      series: [\n        {\n          type: 'tree',\n          name: 'tree1',\n          data: [membersTree],\n          top: '5%',\n          left: '7%',\n          bottom: '2%',\n          right: '7%',\n\n          symbol: 'roundRect',\n          symbolSize: 7,\n\n          label: {\n            normal: {\n              position: 'right',\n              verticalAlign: 'middle',\n            },\n          },\n\n          initialTreeDepth: -1,\n          expandAndCollapse: true,\n\n          animationDuration: 550,\n          animationDurationUpdate: 750,\n        },\n      ],\n    });\n\n    // tree 中的每一个 node 的类型，所以我把类型写在这里\n    type MembersTreeNode =\n      // 根节点是手动写的，类型比较特殊，所以单独拿出来\n      | (typeof membersTree)\n      // 后续的节点的类型\n      | (typeof membersTree)['children'][number];\n\n    // FIXME: 这里没写完整所有类型，应该去补充 ECharts 库的定义来补全所有字段\n    // Click 时候我们会有 data 字段，是 tree 中的每一个 Node\n    type ClickParams = {\n      data: MembersTreeNode;\n    };\n    myChart.on('click', (params: ClickParams) => {\n      console.log(params);\n      window.open(\n        'https://github.com/frontend9/fe9-library/issues/created_by/' +\n          params.data.login\n      );\n    });\n  }, []);\n\n  return (\n    <>\n      <div ref={chartRef} className={classes.memberTree} />\n    </>\n  );\n};\n\nexport default MemberList;\n"],"sourceRoot":""}