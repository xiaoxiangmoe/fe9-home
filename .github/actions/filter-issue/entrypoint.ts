import { Toolkit } from 'actions-toolkit';
import { IssueEvent } from './types';

const tools = new Toolkit({
  event: 'issues.opened',
});

function parseBase64string(base64string: string): any {
  const buf = Buffer.from(base64string, 'base64');
  const result = buf.toString();
  return JSON.parse(result);
}

function objectToBase64string(obj: any) {
  const fileString = JSON.stringify(obj, null, 2);
  const buf = Buffer.from(fileString, 'utf-8');
  const content = buf.toString('base64');
  return content;
}

const event = tools.context.payload as IssueEvent;
tools.log(event);

function closeIssue() {
  return tools.github.issues.update({
    ...tools.context.repo,
    number: event.issue.number,
    state: 'closed',
  });
}
async function closeIssueCommemt(body: string) {
  try {
    await tools.github.issues.createComment({
      ...tools.context.repo,
      number: event.issue.number,
      body,
    });
    await closeIssue();
  } catch (error) {
    console.error(error.message);
  }
}

const exitConfigurationError = () =>
  process.exit(Number(process.env.EX_CONFIG));

async function main() {
  if (!event.issue.title.startsWith('申请添加前端九部成员')) {
    tools.log('issue title 非申请添加成员 ');
    return exitConfigurationError();
  }
  const reg = /^(\r\n|\r|\n)*<!-- generated by tools -->(\r\n|\r|\n)+- 昵称: (.+)(\r\n|\r|\n)- github-login: (.+)(\r\n|\r|\n)- 公司: (.+)(\r\n|\r|\n)- 城市: (.+)(\r\n|\r|\n)*$/;
  const bodyMatchResult = reg.exec(event.issue.body);
  if (bodyMatchResult === null) {
    tools.log('issue 内容 非申请添加成员');
    await closeIssueCommemt('issue 的 body 不合法，请使用表单生成合法的提交');
    return exitConfigurationError();
  }
  const [
    _0,
    _1,
    _2,
    nickname,
    _4,
    githubLogin,
    _6,
    company,
    _8,
    city,
  ] = bodyMatchResult;

  // const a = await tools.github.git.getRef({
  //   ...tools.context.repo,
  //   ref: 'heads/master',
  // });
  const membersJsonContent = await tools.github.repos.getContents({
    ...tools.context.repo,
    path: 'src/members.json',
  });
  const members = parseBase64string(membersJsonContent.data.content) as Array<
    Array<string>
  >;

  const senderLogin = event.sender.login;

  const sender = members.find(
    ([id, login, nickname, parentId, joinDate, city, company]) =>
      login === senderLogin
  );
  if (sender === undefined) {
    await closeIssueCommemt('你不是前端九部成员');
    return exitConfigurationError();
  }
  const createdIssues = await tools.github.issues.listForRepo({
    owner: 'frontend9',
    repo: 'fe9-library',
    state: 'open',
    per_page: 3,
    creator: githubLogin,
  });
  if (createdIssues.data.length < 2) {
    await closeIssueCommemt(
      `[成员发布的文章](https://github.com/frontend9/fe9-library/issues/created_by/${githubLogin}) 数量为${
        createdIssues.data.length
      }， 数量不足2， 不满足要求`
    );
    return exitConfigurationError();
  }
  const id = (1 + Number(members[members.length - 1][0]))
    .toString()
    .padStart(5, '0');
  const parentId = sender[0];
  const now = new Date();

  const joinDate =
    now
      .getFullYear()
      .toString()
      .padStart(4, '0') +
    '-' +
    (now.getMonth() + 1).toString().padStart(2, '0') +
    '-' +
    now
      .getDate()
      .toString()
      .padStart(2, '0');

  members.push([id, githubLogin, nickname, parentId, joinDate, city, company]);

  tools.log(members);

  await tools.github.issues.createComment({
    ...tools.context.repo,
    number: event.issue.number,
    body: `新成员信息是
\`\`\`json
${JSON.stringify(
  {
    id,
    githubLogin,
    nickname,
    parentId,
    joinDate,
    city,
    company,
  },
  null,
  2
)}
\`\`\`
`,
  });
  const updateFileResponse = await tools.github.repos.updateFile({
    ...tools.context.repo,
    path: 'src/members.json',
    message: `add user ${githubLogin}, closes: #${event.issue.number}`,
    content: objectToBase64string(members),
    sha: membersJsonContent.data.sha,
  });
  await closeIssue();
  tools.log(updateFileResponse);
}

main();
